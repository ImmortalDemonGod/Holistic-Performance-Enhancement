# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Ignore all logs/ directories at any depth
**/logs/

# Ignore all reader.db files at any depth
**/reader.db

# Ignore all pdfjs static assets except README.txt
cultivation/systems/knowledge/reader_app/static/pdfjs/*
!cultivation/systems/knowledge/reader_app/static/pdfjs/
!cultivation/systems/knowledge/reader_app/static/pdfjs/README.txt
cultivation/systems/knowledge/reader_app/static/*
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Virtual environment
venv/
ENV/
env/
.venv/
.env/

# Jupyter Notebook
.ipynb_checkpoints/



# Logs
logs/
*.log

# OS files
.DS_Store
Thumbs.db

# IDEs and editors
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Ignore all generated figures and plots (recursive, new structure)
cultivation/outputs/figures/**/*.png
cultivation/outputs/figures/**/*.jpg
cultivation/outputs/figures/**/*.jpeg
cultivation/outputs/figures/**/*.svg
cultivation/outputs/figures/**/*.pdf
# Optionally, ignore all files except .placeholder
!cultivation/outputs/figures/.placeholder
# Optionally, ignore all files except .placeholder
!cultivation/outputs/figures/.placeholder
*.png
#cultivation/reader_app/static/pdfjs/*
cultivation/reader_app/static/pdfjs/cmaps/*
cultivation/reader_app/static/pdfjs/images/*
cultivation/reader_app/static/pdfjs/locale/*
cultivation/reader_app/static/pdfjs/standard_fonts/*
cultivation/reader_app/node_modules/*

# Task Master, agent/editor, and system cache/config files
.cursor/
.roo/
.roomodes

cultivation/reader_app/
cultivation/data/processed/
cultivation/outputs/software/dev_daily_reflect/raw/*.json
cultivation/outputs/software/dev_daily_reflect/rollup/*.csv

# Task Master
.taskmaster/.env
node_modules/

# Added by Claude Task Master
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dev-debug.log
# MkDocs build output

# Habit Dash wellness cache backups
cultivation/data/cache_backups

site/
# Mac system files
**/.DS_Store
# Auto-generated docs file map
docs_file_map.txt
# Dependency directories
# Environment variables
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific
cultivation/literature/pdf/molecular_biology_of_the_cell_2022.pdf

cultivation/scripts/software/github_automation_output/
# From JARC-Reactor subtree
.aider*
task_id_map.json
.tensorboard_env/*
cultivation/data/raw/arc_prize_2025/*
cultivation/systems/george/*
cultivation/systems/george0_2_5.zip

# JARC Reactor specific data directories (training and evaluation)
cultivation/systems/arc_reactor/jarc_reactor/data/evaluation_data/
cultivation/systems/arc_reactor/jarc_reactor/data/training_data/evaluation_2_tasks/
cultivation/systems/arc_reactor/jarc_reactor/data/training_data/synthtraining/
cultivation/systems/arc_reactor/jarc_reactor/data/training_data/training/
cultivation/systems/arc_reactor/jarc_reactor/data/training_data/training_2_tasks/
cultivation/systems/arc_reactor/evaluation_results/
cultivation/systems/arc_reactor/dist/
cultivation/systems/arc_reactor/jarc_reactor/tests/test_outputs/