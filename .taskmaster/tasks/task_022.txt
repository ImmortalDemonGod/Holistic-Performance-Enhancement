# Task ID: 22
# Title: [Flashcore] Finalize Flashcore CLI Tool (`tm-fc`) with Typer/Click
# Status: pending
# Dependencies: 21, 23
# Priority: medium
# Description: Create a main entry point `tm-fc` (using Typer or Click) and wrap existing/planned functionality (card import, review sessions, data export, stats) into subcommands.
# Details:
1. Choose a CLI framework (Typer recommended). Set up `flashcore/cli/main.py`.
2. Define the main `tm-fc` Typer application.
3. Create subcommand `tm-fc review`: This will call `flashcore.cli.review_ui.start_review_flow` (from Task 21). It might take `--max-cards` as an option.
4. Create subcommand `tm-fc import <filepath>`: This will handle importing cards from a specified file (details for this import mechanism are TBD/part of another task, but the CLI structure can be set up as a stub).
5. Create subcommand `tm-fc export <filepath>`: This will handle exporting card data (details TBD/part of another task, stub for now).
6. Create subcommand `tm-fc stats`: Displays basic statistics like total cards, due cards (using `ReviewSessionManager.get_due_card_count`).
7. Add subcommand `tm-fc ingest <filepath>`: Integrate the logic from `ingest_flashcards.py` to allow ingestion of flashcards into the database from a file.
8. Ensure `--help` messages are clear for the main command and all subcommands.
9. Set up `pyproject.toml` so `tm-fc` is an installable script/entry point.

# Test Strategy:
• Manual testing of all subcommands and their options (e.g., `tm-fc --help`, `tm-fc review --help`, `tm-fc review --max-cards 10`, `tm-fc import dummy.csv`, `tm-fc stats`).
• For subcommands with backend logic (review, stats), ensure they correctly call the underlying managers/functions and display expected output or behavior.
• Test error handling for invalid subcommands or options.
• Verify `pyproject.toml` script installation.

# Subtasks:
## 1. Choose CLI framework and set up main entry point [pending]
### Dependencies: None
### Description: Select Typer, and create `flashcore/cli/main.py` with the basic `tm-fc` app structure.
### Details:


## 2. Implement `tm-fc review` subcommand [pending]
### Dependencies: 22.1
### Description: Integrate the review UI flow (from Task 21) into a subcommand, potentially with options like `--max-cards`.
### Details:


## 3. Stub `tm-fc import` and `tm-fc export` subcommands [pending]
### Dependencies: 22.1
### Description: Create placeholder subcommands for import and export, focusing on the CLI structure rather than full implementation.
### Details:


## 4. Implement `tm-fc stats` subcommand [pending]
### Dependencies: 22.1
### Description: Develop the subcommand to display basic card statistics by calling relevant `ReviewSessionManager` methods.
### Details:


## 5. Configure `pyproject.toml` for CLI script installation [pending]
### Dependencies: 22.1
### Description: Add the necessary configuration to make `tm-fc` available as a command after package installation.
### Details:


## 6. Add comprehensive --help messages and conduct manual testing [pending]
### Dependencies: 22.2, 22.3, 22.4, 22.5
### Description: Ensure all commands and subcommands have clear help text and perform thorough manual testing of the CLI.
### Details:


